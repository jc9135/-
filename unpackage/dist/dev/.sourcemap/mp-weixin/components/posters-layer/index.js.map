{"version":3,"sources":[null,"webpack:///D:/demo/uni-app/codeTwo/干饭外卖券/components/posters-layer/index.vue?6125","webpack:///D:/demo/uni-app/codeTwo/干饭外卖券/components/posters-layer/index.vue?af4c","webpack:///D:/demo/uni-app/codeTwo/干饭外卖券/components/posters-layer/index.vue?8665","uni-app:///components/posters-layer/index.vue","webpack:///D:/demo/uni-app/codeTwo/干饭外卖券/components/posters-layer/index.vue?b6c9","webpack:///D:/demo/uni-app/codeTwo/干饭外卖券/components/posters-layer/index.vue?98ad"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkH;AAClH;AACyD;AACL;AACc;;;AAGlE;AACmL;AACnL,gBAAgB,uLAAU;AAC1B,EAAE,2EAAM;AACR,EAAE,gFAAM;AACR,EAAE,yFAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,oFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAkrB,CAAgB,iqBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBtsB,+C;AACA;AACA,MADA,kBACA;AACA;AACA,gBADA;AAEA,iBAFA;AAGA,OAHA;AAIA,OAJA;AAKA,iBALA;AAMA,KANA;AAOA,MAPA;AAQA,MARA;AASA,SATA;AAUA,QAVA;AAWA,MAXA;;AAaA,GAfA;AAgBA;AACA;AACA,kBADA;AAEA,aAFA,sBAEA;AACA;AACA,OAJA,EADA,EAhBA;;;AAwBA;AACA,eADA,uBACA,MADA,EACA,MADA,EACA;AACA;AACA;AACA,KAJA,EAxBA;;AA8BA,SA9BA,qBA8BA;AACA;AACA;AACA;AACA;AACA,GAnCA;AAoCA;AACA,iBADA,yBACA,MADA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KArBA;AAsBA,gBAtBA,0BAsBA;AACA,uBADA,CACA,KADA,sBACA,KADA,CACA,MADA,sBACA,MADA,CACA,KADA,sBACA,KADA,CACA,UADA,sBACA,UADA,4CACA,MADA,CACA,MADA,sCACA,CADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAFA;AAGA,kBAHA;AAIA,mBAJA;AAKA,0BALA;AAMA,wBANA;AAOA,0BAPA;;AASA;AACA;AACA;AACA,OAnBA,EAmBA,GAnBA;AAoBA,KA9CA;AA+CA,gBA/CA,wBA+CA,KA/CA,EA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAvDA;AAwDA,kBAxDA,0BAwDA,KAxDA,EAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAJA;AAKA,OAPA,MAOA;AACA;AACA;AACA,KArEA;AAsEA,mBAtEA,2BAsEA,IAtEA,EAsEA,OAtEA,EAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UADA;AAEA,+BAFA;AAGA,gCAHA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,KAvGA;AAwGA,iBAxGA,2BAwGA;AACA,4BADA,GACA,MADA,CACA,YADA,EACA,KADA,GACA,MADA,CACA,YADA,CACA,KADA;AAEA;AACA;AACA,wBADA,GACA,wBADA;AAEA,0BAFA,GAEA,QAFA;AAGA,4BAHA,GAGA,EAHA;AAIA;AACA;AACA;AACA;AACA,0BADA;AAEA,yCAFA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAlBA,MAkBA;AACA;AACA;AACA,mCADA;AAEA,8EAFA;;AAIA,qBALA,MAKA;AACA;AACA;AACA,mBATA,MASA;AACA;AACA,mBAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAHA,EArCA;AAyCA,KAjJA;AAkJA,iBAlJA,yBAkJA,MAlJA,EAkJA;AACA;AADA;AAGA,SAHA;;;;;;;;;AAYA,YAZA,CAGA,GAHA,eAYA,MAZA,CAIA,GAJA,CAIA,GAJA,4BAIA,CAJA,8BAYA,MAZA,CAKA,IALA,CAKA,IALA,6BAKA,CALA,gCAYA,MAZA,CAMA,KANA,CAMA,KANA,8BAMA,CANA,kCAYA,MAZA,CAOA,MAPA,CAOA,MAPA,+BAOA,CAPA,+BAYA,MAZA,CAQA,EARA,CAQA,EARA,2BAQA,CARA,2BAYA,MAZA,CASA,EATA,CASA,EATA,2BASA,CATA,2BAYA,MAZA,CAUA,EAVA,CAUA,EAVA,2BAUA,CAVA,2BAYA,MAZA,CAWA,EAXA,CAWA,EAXA,2BAWA,CAXA;AAaA;AACA;AACA,OAFA;AAGA;AACA;AACA,OAFA;AAGA;AACA;AACA;AACA,KAxKA;AAyKA,sBAzKA,8BAyKA,MAzKA,EAyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA1LA;AA2LA,mBA3LA,2BA2LA,MA3LA,EA2LA;;;;;;;AAOA,YAPA,CAEA,GAFA,CAEA,GAFA,6BAEA,CAFA,gCAOA,MAPA,CAGA,IAHA,CAGA,IAHA,8BAGA,CAHA,kCAOA,MAPA,CAIA,KAJA,CAIA,KAJA,+BAIA,CAJA,oCAOA,MAPA,CAKA,MALA,CAKA,MALA,gCAKA,CALA,oCAOA,MAPA,CAMA,MANA,CAMA,MANA,+BAMA,CANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAhBA,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KA1NA;AA2NA,aA3NA,qBA2NA,MA3NA,EA2NA;;;;;;;;;;;;;;AAcA,YAdA,CAEA,IAFA,CAEA,IAFA,6BAEA,EAFA,gBAGA,UAHA,GAcA,MAdA,CAGA,UAHA,gBAcA,MAdA,CAIA,GAJA,CAIA,GAJA,6BAIA,CAJA,gCAcA,MAdA,CAKA,IALA,CAKA,IALA,8BAKA,CALA,kCAcA,MAdA,CAMA,KANA,CAMA,KANA,+BAMA,CANA,oCAcA,MAdA,CAOA,MAPA,CAOA,MAPA,gCAOA,CAPA,qCAcA,MAdA,CAQA,MARA,CAQA,MARA,gCAQA,CARA,iCAcA,MAdA,CASA,GATA,CASA,GATA,4BASA,EATA,6BAcA,MAdA,CAUA,EAVA,CAUA,EAVA,4BAUA,CAVA,6BAcA,MAdA,CAWA,EAXA,CAWA,EAXA,4BAWA,CAXA,6BAcA,MAdA,CAYA,EAZA,CAYA,EAZA,4BAYA,CAZA,6BAcA,MAdA,CAaA,EAbA,CAaA,EAbA,4BAaA,CAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAFA;AAGA;AACA;AACA;AACA;;AAEA;AACA,KA5QA;AA6QA,iBA7QA,yBA6QA,MA7QA,EA6QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA3RA;AA4RA,YA5RA,oBA4RA,MA5RA,EA4RA;;;;;;;;;;;;;;AAcA,YAdA,CAEA,aAFA,CAEA,aAFA,sCAEA,CAFA,6CAcA,MAdA,CAGA,SAHA,CAGA,SAHA,kCAGA,KAHA,qCAcA,MAdA,CAIA,KAJA,CAIA,KAJA,8BAIA,OAJA,mCAcA,MAdA,CAKA,OALA,CAKA,OALA,gCAKA,EALA,sCAcA,MAdA,CAMA,QANA,CAMA,QANA,iCAMA,EANA,mCAcA,MAdA,CAOA,GAPA,CAOA,GAPA,6BAOA,CAPA,gCAcA,MAdA,CAQA,IARA,CAQA,IARA,8BAQA,CARA,sCAcA,MAdA,CASA,UATA,CASA,UATA,mCASA,EATA,0CAcA,MAdA,CAUA,SAVA,CAUA,SAVA,kCAUA,MAVA,qBAWA,KAXA,GAcA,MAdA,CAWA,KAXA,kBAcA,MAdA,CAYA,MAZA,CAYA,MAZA,+BAYA,KAZA,0CAcA,MAdA,CAaA,cAbA,CAaA,cAbA,sCAaA,MAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARA;AASA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cADA;AAEA,0BAFA;AAGA,kBAHA;AAIA,uBAJA;AAKA,gCALA;;AAOA;AACA,KAtWA;AAuWA,gBAvWA,wBAuWA,IAvWA,EAuWA,GAvWA,EAuWA,cAvWA,EAuWA,KAvWA,EAuWA,QAvWA,EAuWA,OAvWA,EAuWA;AACA;AACA;AACA,2BADA;AAEA,mCAFA;AAGA,wBAHA;AAIA,wDAJA;AAKA,mBALA;;AAOA,OARA,MAQA;AACA;AACA,2BADA;AAEA,mCAFA;AAGA,wBAHA;AAIA,wDAJA;AAKA,mBALA;;AAOA;AACA,KAzXA;AA0XA,YA1XA,oBA0XA,MA1XA,EA0XA;AACA;AADA,UAEA,UAFA,GAEA,MAFA,CAEA,UAFA,gBAEA,MAFA,CAEA,GAFA,CAEA,GAFA,6BAEA,CAFA,gCAEA,MAFA,CAEA,IAFA,CAEA,IAFA,8BAEA,CAFA,kCAEA,MAFA,CAEA,KAFA,CAEA,KAFA,+BAEA,CAFA,oCAEA,MAFA,CAEA,MAFA,CAEA,MAFA,gCAEA,CAFA;AAGA;AACA;AACA;AACA;AACA;AACA,OAHA;AAIA;AACA;AACA;AACA;AACA;AACA,KAxYA;AAyYA,gBAzYA,wBAyYA,GAzYA,EAyYA;AACA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;AACA;AACA,sBADA;AAEA;;AAEA;AACA;AACA,4BADA;AAEA,0CAFA;AAGA,4CAHA;AAIA,uCAJA;;AAMA;AACA;AACA;AACA;AACA,iBAXA,MAWA;AACA;AACA;AACA,eAlBA;;AAoBA,WArBA,MAqBA;AACA;AACA,sBADA;AAEA,4BAFA;AAGA,6BAHA;AAIA,4BAJA;;AAMA;AACA;AACA;AACA,OAtCA;AAuCA,KAjbA;AAkbA,oBAlbA,8BAkbA;AACA,WADA,GACA,IADA,CACA,KADA,CACA,MADA,GACA,IADA,CACA,MADA;AAEA;AACA,YADA;AAEA,YAFA;AAGA,oBAHA;AAIA,sBAJA;AAKA,gCALA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA,0BADA;AAEA,4BAFA;AAGA,oCAHA;;AAKA;AACA,SAjBA;AAkBA,UAlBA;AAmBA,KAvcA,EApCA,E;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAuvC,CAAgB,mpCAAG,EAAC,C;;;;;;;;;;;ACA3wC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"components/posters-layer/index.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=ed5a52bc&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/posters-layer/index.vue\"\nexport default component.exports","export * from \"-!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=template&id=ed5a52bc&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"","<style lang=\"scss\">\n.posters-layer {\n  position: fixed;\n  top: -5000rpx;\n  left: -5000rpx;\n  /* top: 0;\n  left: 0; */\n}\n</style>\n\n<template>\n    <canvas\n        canvas-id=\"canvasdrawer\"\n        :style=\"{width: width + 'px', height: height + 'px'}\"\n        class=\"posters-layer\">\n    </canvas>\n</template>\n<script>\nconst CACHE_KEYS = 'temp_canvasdrawer_pic_cache';\nexport default {\n    data() {\n        return {\n            width: 100,\n            height: 100,\n            width: 100,\n            height: 100,\n            paintingData: { views: [] },\n            index: 0,\n            imageList: [],\n            tempFileList: [],\n            isPainting: false,\n            ctx: null,\n            cache: {},\n        }\n    },\n    props: {\n        postersData: {\n            type: Object,\n            default() {\n                return { views: [] };\n            }\n        }\n    },\n    watch: {\n        postersData(newVal, oldVal) {\n            newVal = newVal || { views: [] };\n            this.createPosters(newVal);\n        }\n    },\n    mounted() {\n        uni.removeStorageSync('CACHE_KEYS');\n        this.cache = uni.getStorageSync('CACHE_KEYS') || {};\n        this.ctx = uni.createCanvasContext('canvasdrawer', this);\n        this.createPosters(this.postersData);\n    },\n    methods: {\n        createPosters(newVal) {\n            if (!newVal.width || !newVal.height) {\n                return;\n            };\n            // newVal = newVal || { views: [] };\n            newVal.views = newVal.views || [];\n            uni.removeStorageSync('CACHE_KEYS')\n            this.paintingData = newVal;\n            this.ctx && this.ctx.clearActions();\n            if (!this.isPainting) {\n                if (newVal.width && newVal.height) {\n                    this.isPainting = true;\n                    try {\n                        this.readyPigment();\n                    }\n                    catch(err) {\n                        this.$emit('error');\n                    }\n                }\n            }\n        },\n        readyPigment() {\n            const { width, height, views, background, radius = 0 } = this.paintingData;\n            this.width = width;\n            this.height = height;\n            const inter = setInterval(() => {\n                if (this.ctx) {\n                    clearInterval(inter);\n                    this.ctx.clearActions();\n                    this.ctx.closePath();\n                    // begin another path\n                    this.ctx.beginPath();\n                    this.drawRect({\n                        //  || 'rgba(255, 255, 255, 0)'\n                        background: background,\n                        top: 0,\n                        left: 0,\n                        radius,\n                        width,\n                        height\n                    })\n                    this.getImageList(views);\n                    this.downLoadImages(0);\n                }\n            }, 100);\n        },\n        getImageList(views) {\n            const imageList = [];\n            for (let i = 0; i < views.length; i++) {\n                if (views[i].type === 'image') {\n                    imageList.push(views[i].url);\n                }\n            }\n            this.imageList = imageList;\n        },\n        downLoadImages(index) {\n            const imageList = this.imageList;\n            const tempFileList = this.tempFileList;\n            if (index < imageList.length) {\n                // console.log(imageList[index])\n                this.getImageInfo(imageList[index]).then(imgInfo => {\n                    tempFileList.push(imgInfo)\n                    this.tempFileList = tempFileList;\n                    this.downLoadImages(index + 1);\n                })\n            } else {\n                this.startPainting();\n            }\n        },\n        tailorImageDraw(view, imgInfo) {\n            // _views.tailor == 'center'\n            let px = 1;\n            let wMultiple = (view.width * px) / imgInfo.originWidth;\n            let hMultiple = (view.height * px) / imgInfo.originHeight;\n            let sizeNormal = false;\n            if (wMultiple <= 1 && hMultiple <= 1) {\n                let multiple = wMultiple > hMultiple ? wMultiple : hMultiple;\n                // let tempW = imgInfo.originWidth * multiple;\n                // let tempH = imgInfo.originHeight * multiple;\n                let tempW = (view.width * px) / multiple;\n                let tempH = (view.height * px) / multiple;\n                let sx = (imgInfo.originWidth - tempW) / 2;\n                let sy = (imgInfo.originHeight - tempH) / 2;\n                let ex = sx + tempW;\n                let ey = sy + tempH;\n                view['sx'] = sx || 0;\n                view['sy'] = sy || 0;\n                view['ex'] = ex || 0;\n                view['ey'] = ey || 0;\n                sizeNormal = true;\n            }\n            const data = {\n                ...view,\n                ow: imgInfo.originWidth,\n                oh: imgInfo.originHeight\n            };\n            // console.log(JSON.stringify(data));\n            if (!sizeNormal) {\n                delete data.tailor;\n            }\n            // this.drawImage(data);\n            return data;\n        },\n        async startPainting() {\n            const { tempFileList, paintingData: { views } } = this;\n            for (let i = 0, imageIndex = 0; i < views.length; i++) {\n                if (views[i].type === 'image') {\n                    let _img = tempFileList[imageIndex];\n                    let _views = views[i];\n                    let drawData = {};\n                    if (_views.tailor) {\n                        _views = this.tailorImageDraw(_views, _img);\n                    }\n                    drawData = {\n                        ..._views,\n                        url: _img.localPath\n                    };\n                    this.drawImage(drawData);\n                    // if (_views.radius) {\n                    //     this.drawRoundRect(drawData);\n                    // }\n                    // else {\n                    // }\n                    imageIndex++;\n                } else if (views[i].type === 'text') {\n                    if (!this.ctx.measureText) {\n                        uni.showModal({\n                            title: '提示',\n                            content: '当前微信版本过低，无法使用 measureText 功能，请升级到最新微信版本后重试。'\n                        });\n                    } else {\n                        this.drawText(views[i]);\n                    }\n                } else if (views[i].type === 'rect') {\n                    this.drawRect(views[i]);\n                }\n                else if (views[i].type === 'round') {\n                    this.drawRound(views[i]);\n                }\n            }\n            this.ctx.draw(true, () => {\n                uni.setStorageSync('CACHE_KEYS', this.cache);\n                this.saveImageToLocal();\n            })\n        },\n        old_drawImage(params) {\n            // console.log(params)\n            const {\n                url,\n                top = 0,\n                left = 0,\n                width = 0,\n                height = 0,\n                sx = 0,\n                sy = 0,\n                ex = 0,\n                ey = 0\n            } = params;\n            if ('tailor' in params) {\n                this.ctx.drawImage(url, sx, sy, ex, ey, left, top, width, height);\n            }\n            else if (params.round === true) {\n                this.drawRoundImage(params);\n            }\n            else {\n                this.ctx.drawImage(url, left, top, width, height);\n            }\n        },\n        old_drawRoundImage(params) {\n            let ctx = this.ctx;\n            let x = params.left;\n            let y = params.top;\n            let w = params.width;\n            let h = params.height;\n            let url = params.url;\n            let r = w / 2;\n            ctx.save();\n            ctx.beginPath();\n            ctx.arc(x + r, y + r, r, 0, 2 * Math.PI);\n            ctx.setFillStyle(params.background || '#ffffff');\n            ctx.fill();\n            ctx.clip();\n            // 这个地方想要的是头像，简单点就放了个矩形\n            ctx.drawImage(url, x, y, w, h);\n            ctx.restore();\n        },\n        _drawRadiusRect(params) {\n            const {\n                top = 0,\n                left = 0,\n                width = 0,\n                height = 0,\n                radius = 0,\n             } = params;\n            let x = left;\n            let y = top;\n            let w = width;\n            let h = height;\n            // let bgc = background;\n            let r = radius;\n            // let br = radius;\n            this.ctx.beginPath();\n            this.ctx.moveTo(x + r, y);    // 移动到左上角的点\n            this.ctx.lineTo(x + w - r, y);\n            this.ctx.arc(x + w - r, y + r, r, 2 * Math.PI * (3 / 4), 2 * Math.PI * (4 / 4));\n            this.ctx.lineTo(x + w, y + h - r);\n            this.ctx.arc(x + w - r, y + h - r, r, 0, 2 * Math.PI * (1 / 4));\n            this.ctx.lineTo(x + r, y + h);\n            this.ctx.arc(x + r, y + h - r, r, 2 * Math.PI * (1 / 4), 2 * Math.PI * (2 / 4));\n            this.ctx.lineTo((x), (y + r));\n            this.ctx.arc(x + r, y + r, r, 2 * Math.PI * (2 / 4), 2 * Math.PI * (3 / 4));\n\n            // this.ctx.moveTo(x + r, y);\n            // this.ctx.arcTo(x + w, y, x + w, y + h, r);\n            // this.ctx.arcTo(x + w, y + h, x, y + h, r);\n            // this.ctx.arcTo(x, y + h, x, y, r);\n            // this.ctx.arcTo(x, y, x + w, y, r);\n        },\n        drawImage(params) {\n            const {\n                type = '',\n                background,\n                top = 0,\n                left = 0,\n                width = 0,\n                height = 0,\n                radius = 0,\n                url = '',\n                sx = 0,\n                sy = 0,\n                ex = 0,\n                ey = 0\n            } = params;\n            let x = left;\n            let y = top;\n            let w = width;\n            let h = height;\n            let r = radius;\n            this.ctx.save();\n            if (radius) {\n                this.ctx.beginPath();\n                \n\n                // if (radius === parseInt(width / 2)) {\n                //     console.log('圆');\n                //     this.ctx.beginPath();\n                //     this.ctx.arc(left + radius, top + radius, radius, 0, 2 * Math.PI);\n                //     this.ctx.setFillStyle(params.background || '#ffffff')\n                //     this.ctx.fill()\n                //     this.ctx.clip();\n                //     this.ctx.drawImage(url, x, y, w, h);\n                // }\n                // else {\n                // }\n                this._drawRadiusRect(params);\n                this.ctx.fill();\n                this.ctx.clip();\n            }\n            if ('tailor' in params) {\n                this.ctx.drawImage(url, sx, sy, ex, ey, left, top, width, height);\n            }\n            else {\n                this.ctx.drawImage(url, left, top, width, height);\n            }\n            // this.drawImage(params);\n            \n            this.ctx.restore();\n        },\n        old_drawRound(params) {\n            let ctx = this.ctx;\n            let x = params.left;\n            let y = params.top;\n            let w = params.width;\n            let h = params.height;\n            let r = params.radius;\n            ctx.save();\n            ctx.beginPath();\n            ctx.arc(x + r, y + r, r, 0, 2 * Math.PI);\n            ctx.setFillStyle(params.background || '#ffffff');\n            ctx.fill();\n            ctx.clip();\n            ctx.restore();\n        },\n        drawText(params) {\n            let {\n                MaxLineNumber = 2,\n                breakWord = false,\n                color = 'black',\n                content = '',\n                fontSize = 16,\n                top = 0,\n                left = 0,\n                lineHeight = 20,\n                textAlign = 'left',\n                width,\n                bolder = false,\n                textDecoration = 'none'\n            } = params;\n            if (bolder) {\n                top -= 0.3;\n            }\n            // this.ctx.save();\n            // this.ctx.beginPath();\n            // this.ctx.stroke();\n            let _setStyle = () => {\n                // this.ctx.save();\n                this.ctx.closePath();\n                this.ctx.beginPath();\n                this.ctx.setTextBaseline('top');\n                this.ctx.setFillStyle(color);\n                this.ctx.setFontSize(fontSize);\n                this.ctx.setTextAlign(textAlign);\n            }\n            _setStyle();\n            if (!breakWord) {\n                this.ctx.fillText(content, left, top);\n                this.drawTextLine(left, top, textDecoration, color, fontSize, content);\n            } else {\n                let fillText = '';\n                let fillTop = top;\n                let lineNum = 1;\n                for (let i = 0; i < content.length; i++) {\n                    fillText += [content[i]];\n                    // _setStyle();\n                    if (this.ctx.measureText(fillText).width > width) {\n                        if (lineNum === MaxLineNumber) {\n                            if (i !== content.length) {\n                                fillText = fillText.substring(0, fillText.length - 1) + '...';\n                                // _setStyle();\n                                this.ctx.fillText(fillText, left, fillTop);\n                                this.drawTextLine(left, fillTop, textDecoration, color, fontSize, fillText);\n                                fillText = '';\n                                break;\n                            }\n                        }\n                        // _setStyle();\n                        this.ctx.fillText(fillText, left, fillTop);\n                        this.drawTextLine(left, fillTop, textDecoration, color, fontSize, fillText);\n                        fillText = '';\n                        fillTop += lineHeight;\n                        lineNum++;\n                    }\n                }\n                // _setStyle();\n                this.ctx.fillText(fillText, left, fillTop);\n                this.drawTextLine(left, fillTop, textDecoration, color, fontSize, fillText);\n            }\n            // this.ctx.draw();\n            if (bolder) {\n                this.drawText({\n                    ...params,\n                    left: left - 0.3,\n                    top: top,\n                    bolder: false,\n                    textDecoration: 'none'\n                });\n            }\n        },\n        drawTextLine(left, top, textDecoration, color, fontSize, content) {\n            if (textDecoration === 'underline') {\n                this.drawRect({\n                    background: color,\n                    top: top + fontSize * 1.2,\n                    left: left - 1,\n                    width: this.ctx.measureText(content).width + 2,\n                    height: 1\n                });\n            } else if (textDecoration === 'line-through') {\n                this.drawRect({\n                    background: color,\n                    top: top + fontSize * 0.6,\n                    left: left - 1,\n                    width: this.ctx.measureText(content).width + 2,\n                    height: 1\n                });\n            }\n        },\n        drawRect(params) {\n            // console.log(params)\n            const { background, top = 0, left = 0, width = 0, height = 0 } = params\n            this.ctx.save();\n            this.ctx.setFillStyle(background);\n            if (params.radius) {\n                this._drawRadiusRect(params);\n                this.ctx.fill();\n            }\n            else {\n                this.ctx.setFillStyle(background);\n                this.ctx.fillRect(left, top, width, height);\n            }\n            this.ctx.restore();\n        },\n        getImageInfo(url) {\n            return new Promise((resolve, reject) => {\n                /* 获得要在画布上绘制的图片 */\n                if (this.cache[url]) {\n                    resolve(this.cache[url]);\n                } else {\n                    const objExp = new RegExp(/^http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- .\\/?%&=]*)?/);\r\n\t\t\t\t\t\t\t\t\tconsole.log(objExp.test(url))\n                    if (objExp.test(url)) {\n                        uni.getImageInfo({\n                            src: url,\n                            complete: res => {\r\n\t\t\t\t\t\t\t\t\n                                if (res.errMsg === 'getImageInfo:ok') {\n                                    const img = {\n                                        url,\n                                        originWidth: res.width,\n                                        originHeight: res.height,\n                                        localPath: res.path\n                                    };\n                                    this.cache[url] = img;\n                                    // console.log(res);\n                                    // resolve(res.path)\n                                    resolve(img);\n                                } else {\n                                    reject(new Error('getImageInfo fail'));\n                                }\n                            }\n                        });\n                    } else {\n                        this.cache[url] = {\n                            url,\n                            originWidth: 0,\n                            originHeight: 0,\n                            localPath: url\n                        };\n                        resolve(url);\n                    }\n                }\n            })\n        },\n        saveImageToLocal() {\n            const { width, height } = this;\n            uni.canvasToTempFilePath({\n                x: 0,\n                y: 0,\n                width,\n                height,\n                canvasId: 'canvasdrawer',\n                success: res => {\n                    if (res.errMsg === 'canvasToTempFilePath:ok') {\n                        this.isPainting = false;\n                        this.imageList = [];\n                        this.tempFileList = [];\n                        this.$emit('success', {\n                            width,\n                            height,\n                            path: res.tempFilePath\n                        });\n                    }\n                }\n            }, this);\n        }\n    }\n}\n</script>\n","import mod from \"-!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&lang=scss&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1610279309982\n      var cssReload = require(\"D:/HBuilderX/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}